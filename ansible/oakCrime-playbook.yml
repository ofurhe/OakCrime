version: "3"

- hosts: oakcrime.aws.openoakland.org
  vars:
    http_port: 80

# to deploy docker directly into container
# https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#non-ssh-connection-types

- name: create container
  docker_container:
    docker_host: oakcrime.aws.openoakland.org
    name: aws01_container
    image: aws01

- name: add container to inventory
  add_host:
    name: aws.openoakland.org
    ansible_connection: docker
    ansible_docker_extra_args: "--tlsverify --tlscacert=/path/to/ca.pem --tlscert=/Users/rik/.docker/machine/certs/cert.pem --tlskey=/path/to/client-key.pem -H=tcp://oakcrime.aws.openoakland.org:4243"
    ansible_user: rik
  changed_when: false

- name: create directory for ssh keys
  delegate_to: rik
  file:
    path: "/var/rik_home/.ssh/jupiter"
    state: directory

- name: run HarvestSocrata script
  shell: runHarvestSocrata.sh
    
# 2do

- name: establish cron jobs for harvesters, db copying

- name: backup DB on remote machine

  
## django
# https://docs.ansible.com/ansible/latest/modules/django_manage_module.html

vars:
  django_dir:  # = app_path:
  settings_dir: # = settings:
  initial_data: # = fixtures:
  cache_table:
  command:
  database:
  pythonpath:
  

# Run cleanup on the application installed in 'django_dir'.
- django_manage:
    command: cleanup
    app_path: "{{ django_dir }}"

# Load the initial_data fixture into the application
- django_manage:
    command: loaddata
    app_path: "{{ django_dir }}"
    fixtures: "{{ initial_data }}"

# Run syncdb on the application
- django_manage:
    command: migrate # syncdb
    app_path: "{{ django_dir }}"
    settings: "{{ settings_app_name }}"
    pythonpath: "{{ settings_dir }}"
    virtualenv: "{{ virtualenv_dir }}"

# Run the SmokeTest test case from the main app. Useful for testing deploys.
- django_manage:
    command: test
    app_path: "{{ django_dir }}"
    apps: main.SmokeTest

# Create an initial superuser.
- django_manage:
    command: "createsuperuser --noinput --username=admin --email=admin@example.com"
    app_path: "{{ django_dir }}"

# harvestPatrolLog
- django_manage:
    command: "harvestPatrolLog"
    app_path: "{{ django_dir }}"


## clinton's template

services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000
    container_name: oakcrime.app
    image: open-oakland/oakcrime
    ports:
      - 8000:8000
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - .:/app/showCrime
      - logs:/logs
      - public:/public
  db:
    container_name: oakcrime.db
    image: mdillon/postgis:11
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always
volumes:
  db-data:
  logs:
  plots:
  public:

## oakcrime environment

environment:
  DB_PW=
  DB_USER=
  DEBUG=
  LOG_FILE_PATH=
  PLOT_PATH=
  PUBLIC_ROOT=
  SECRET_KEY=
  ADMIN_USER=
  ADMIN_EMAIL=
  EMAIL_HOST=
  EMAIL_HOST_USER=
  EMAIL_PW=
  SERVER_EMAIL=
  SITE_URL=

  POSTGRES_DB=
  DATABASE_URL=
  
  GoogleMapAPIKey=
  BoxEnterpriseID=
  BoxHarvestBotUserID=
  BoxHarvestBotEmail=
  BoxDevpToken=
  BoxClientID=
  BoxClientSecret=
  BoxPublicKeyID=
  BoxRSAFile=
  BoxPassPhrase=

    
